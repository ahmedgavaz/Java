/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package packageGUI;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import newpackage.CarManager;
import newpackage.Car;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Petya Tetevenska
 */
public class JPanelCars extends javax.swing.JPanel {

    CarManager myCarManager = CarManager.getTheCarManager();

    /**
     * Creates new form JPanelCars
     */
    public JPanelCars() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jScrollPaneCars = new javax.swing.JScrollPane();
        jTableCars = new javax.swing.JTable();
        jButtonAddCar = new javax.swing.JButton();
        jButtonDeleteCar = new javax.swing.JButton();
        jLabelCarId = new javax.swing.JLabel();
        jLabelDriverName = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jTextFieldName = new javax.swing.JTextField();
        jButtonUpdateCar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(500, 400));

        titleLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        titleLabel.setText("Cars Management");

        jTableCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car ID", "Name of driver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCars.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCarsMouseClicked(evt);
            }
        });
        jScrollPaneCars.setViewportView(jTableCars);

        jButtonAddCar.setText("Add");
        jButtonAddCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCarActionPerformed(evt);
            }
        });

        jButtonDeleteCar.setText("Delete");
        jButtonDeleteCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCarActionPerformed(evt);
            }
        });

        jLabelCarId.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        jLabelCarId.setText("Car ID:");

        jLabelDriverName.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        jLabelDriverName.setText("Driver Name: ");

        jTextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDActionPerformed(evt);
            }
        });

        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });

        jButtonUpdateCar.setText("Update");
        jButtonUpdateCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateCarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPaneCars, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDriverName)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelCarId)
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonAddCar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonUpdateCar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonDeleteCar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCarId)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDriverName)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddCar)
                    .addComponent(jButtonUpdateCar)
                    .addComponent(jButtonDeleteCar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneCars, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableCars.getModel();
        ArrayList<Car> localCars = newpackage.CarManager.getCars();
        int id = 0;
        String userName = "";

        int answer = JOptionPane.showConfirmDialog(this, "Do you want to save this car?", "Please confirm!", JOptionPane.CANCEL_OPTION, JOptionPane.OK_OPTION);
        if (answer == JOptionPane.CANCEL_OPTION) {
            JOptionPane.getRootFrame().dispose();
        } else {

            try {
                id = Integer.parseInt(jTextFieldID.getText());
                userName = jTextFieldName.getText();

                Car car = new Car(id, userName);
                localCars.add(car);

                myCarManager.addCar(id, userName);
                myCarManager.serialize();

                Object rowData[] = new Object[2];

                for (int i = 0; i < localCars.size(); i++) {
                    //filter what to add to the ui table
                    if (localCars.get(i).getId() == car.getId() && localCars.get(i).getNameOfUser().equals(car.getNameOfUser())) {
                        rowData[0] = localCars.get(i).getId();
                        rowData[1] = localCars.get(i).getNameOfUser();
                        model.addRow(rowData);
                    }
                }

            } catch (Exception e) {
                String message = "Car id \"" + jTextFieldID.getText() + "\" is not valid. Please enter a number instead!";
                JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAddCarActionPerformed

    private void jButtonDeleteCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableCars.getModel();
        int i = jTableCars.getSelectedRow();
        if ((i < 0)) {  // no row is selected
            JOptionPane.showMessageDialog(this, "Sorry, no car is selected!");
            return;
        }
        // a row is selected: get the data of that row in first column
        String carId = model.getValueAt(i, 0).toString();
        if (carId.equals("null")) {  // no car ID in the row
            JOptionPane.showMessageDialog(this, "Sorry, there is no car ID in this row!");
            return;
        }

        int answer = JOptionPane.showConfirmDialog(this, "Do you really want to delete this car?", "Please confirm", JOptionPane.YES_NO_OPTION);
        if (answer == JOptionPane.NO_OPTION) {
            JOptionPane.getRootFrame().dispose();
        } else {
            int iD = Integer.parseInt(model.getValueAt(i, 0).toString());
            myCarManager.delete(iD);
            myCarManager.serialize();
            model.removeRow(i);
            JOptionPane.showMessageDialog(this, "Car deleted");
        }
    }//GEN-LAST:event_jButtonDeleteCarActionPerformed

    private void jTableCarsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCarsMouseClicked
        int i = jTableCars.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTableCars.getModel();
        jTextFieldID.setText(model.getValueAt(i, 0).toString());
        jTextFieldName.setText(model.getValueAt(i, 1).toString());
    }//GEN-LAST:event_jTableCarsMouseClicked

    private void jButtonUpdateCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateCarActionPerformed
        int i = jTableCars.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTableCars.getModel();

        try {

            String result = model.getValueAt(i, 0).toString();
            int iD = Integer.parseInt(result);
            int newID = Integer.parseInt(jTextFieldID.getText());
            String nameOfDriver = jTextFieldName.getText().trim();

            myCarManager.update(iD, newID, nameOfDriver);
            myCarManager.serialize();

            model.setValueAt(newID, i, 0);
            model.setValueAt(nameOfDriver, i, 1);
            
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Update Error!", "Please note", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jButtonUpdateCarActionPerformed

    private void jTextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDActionPerformed

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed
    

    public void init() {
        DefaultTableModel model = (DefaultTableModel) jTableCars.getModel();

        myCarManager.deserialize();
        if (myCarManager.getCars().isEmpty()) {
            myCarManager.createTestCars();
            myCarManager.serialize();
            myCarManager.deserialize();
        }

        for (Car aCar : myCarManager.getCars()) {
            model.addRow(new Object[]{aCar.getId(), aCar.getNameOfUser()});
        }
        //2. define a TableModelListener to handle car table updates
        model.addTableModelListener(new TableModelListener() {
            // we only handle update events!
            @Override
            public void tableChanged(TableModelEvent ev) {
                if (ev.getType() == javax.swing.event.TableModelEvent.UPDATE) {
//                    handleCarUpdate(ev);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddCar;
    private javax.swing.JButton jButtonDeleteCar;
    private javax.swing.JButton jButtonUpdateCar;
    private javax.swing.JLabel jLabelCarId;
    private javax.swing.JLabel jLabelDriverName;
    private javax.swing.JScrollPane jScrollPaneCars;
    private javax.swing.JTable jTableCars;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
